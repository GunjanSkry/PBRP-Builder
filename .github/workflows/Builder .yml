# This is a basic workflow to help you get started with Actions

name: Recovery Builder

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      RECOVERY_NAME:
         discription: 'Name of the recovery you want to build'
         required: true
         default: 'TWRP'
         type: choice
         options:
         - TWRP
         - PBRP
      MANIFEST_BRANCH:
        description: 'Recovery  Branch'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
        - android-12.1
        - twrp-12.1
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: 'https://github.com/xeroxero8x/device_xiaomi_sweet_k6a'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'Specify your device path.'
        required: true
        default: 'device/xiaomi/sweet_k6a'
      DEVICE_NAME:
        description: 'Specify your Device Codename.'
        required: true
        default: 'sweet'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
        - boot
        - recovery
        - vendorboot

jobs:
  build:
    name: Build Recovery by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
              
    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12
      
    - name: Build Environment
      run: |
        sudo apt install aria2 -y
        sudo apt install repo -y
        git clone https://gitlab.com/OrangeFox/misc/scripts
        cd scripts
        sudo bash setup/android_build_env.sh
      
    - name: Set-up Manifest
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/Recovery
        cd ${GITHUB_WORKSPACE}/Recovery
        git config --global user.name "xeroxero8x"
        git config --global user.email "xeroxero8@outlook.com"
        repo init --depth=1 -u https://github.com/PitchBlackRecoveryProject/manifest_pb -b ${{ github.event.inputs.MANIFEST_BRANCH }}
        repo sync
    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/Recovery
        git clone ${{ github.event.inputs.DEVICE_TREE }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}

    - name: Check Manifest Branch
      uses: haya14busa/action-cond@v1
      id: fox_branch
      with:
        cond: ${{ github.event.inputs.MANIFEST_BRANCH == 'twrp-12.1' || github.event.inputs.MANIFEST_BRANCH == 'android-12.1' }}
        if_true: lunch twrp_${{ github.event.inputs.DEVICE_NAME }}-eng && make clean && mka pbrp ${{ github.event.inputs.BUILD_TARGET }}image
        if_false: lunch omni_${{ github.event.inputs.DEVICE_NAME }}-eng && make clean && mka ${{ github.event.inputs.BUILD_TARGET }}image
      
    - name: Building OrangeFox
      run: |
        cd ${GITHUB_WORKSPACE}/Recovery/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        set +e
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        set -e
        ${{ steps.fox_branch.outputs.value }}

    - name: Set Build Date # For Build Date Info, currently using Asia/Manila
      run: |
        echo "BUILD_DATE=$(TZ=Asia/Dhaka date +%Y%m%d)" >> $GITHUB_ENV

    - name: Check if Recovery Exist
      run: |
        cd ${GITHUB_WORKSPACE}/Recovery
        if [ -f out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.RECOVERY_NAME}}*.img ]; then
            echo "CHECK_IMG_IS_OK=true" >> $GITHUB_ENV
        else
            echo "Recovery out directory is empty."
        fi
        if [ -f out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.RECOVERY_NAME}}*.zip ]; then
            echo "CHECK_ZIP_IS_OK=true" >> $GITHUB_ENV
        else
            echo "Recovery out directory is empty."
        fi

    - name: Upload to Release
      if: env.CHECK_IMG_IS_OK == 'true' && env.CHECK_ZIP_IS_OK == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          Recovery/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.RECOVERY_NAME}}*.img
          Recovey/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/${{ github.event.inputs.RECOVERY_NAME}}*.zip
        name: Unofficial ${{ github.event.inputs.RECOVERY_NAME}} for ${{ github.event.inputs.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Build: fox_${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_TREE }}/tree/${{ github.event.inputs.DEVICE_TREE_BRANCH }}

